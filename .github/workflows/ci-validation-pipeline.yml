name: PR Validation

on:
  pull_request:
    branches: [develop, 'release/**']

permissions:
  contents: read
  pull-requests: read

jobs:
  changed_files:
    name: Detect changed directories
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - type: services
            paths: [
              'CompanyAPI',
              'DJHostGateway',
              'DocumentsAPI',
              'EquipmentAPI',
              'IdentityAPI',
              'MailingAPI',
              'MusicAPI',
              'PartyAPI'
            ]
          - type: frontends
            paths: [
              'DJPanel',
              'Identity',
              'Music'
            ]
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Filter changed files
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            changes:
              - '${{ matrix.type }}/${{ join(matrix.paths, '/**\n  - ') }}/**'
      
      - name: Set matrix output
        id: set-matrix
        run: |
          echo "matrix=$(jq -n \
            --arg type "${{ matrix.type }}" \
            --argjson paths '${{ steps.filter.outputs.changes_files }}' \
            '{type: $type, paths: $paths}' | jq -c .)" >> $GITHUB_OUTPUT

  validate_dotnet:
    needs: changed_files
    if: ${{ fromJson(needs.changed_files.outputs.matrix).type == 'services' }}
    name: Validate PR - DotNet
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.changed_files.outputs.matrix).paths }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'
      - name: Restore dependencies
        run: dotnet restore Services/${{ matrix.service }}
      - name: Build
        run: dotnet build Services/${{ matrix.service }} --no-restore --configuration Release

  validate_react:
    needs: changed_files
    if: ${{ fromJson(needs.changed_files.outputs.matrix).type == 'frontends' }}
    name: Validate PR - React
    runs-on: ubuntu-latest
    strategy:
      matrix:
        frontend: ${{ fromJson(needs.changed_files.outputs.matrix).paths }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm install
        working-directory: Frontends/${{ matrix.frontend }}
      - name: Build
        run: npm run build
        working-directory: Frontends/${{ matrix.frontend }}
    

    

