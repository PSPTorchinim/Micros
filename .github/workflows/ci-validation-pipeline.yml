name: PR Validation

on:
  pull_request:
    branches: [develop, 'release/**']

permissions:
  contents: read
  pull-requests: read

jobs:
  validate_dotnet:
    name: Validate PR - DotNet
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [
          'Services/CompanyAPI',
          'Services/DJHostGateway',
          'Services/DocumentsAPI',
          'Services/EquipmentAPI',
          'Services/IdentityAPI',
          'Services/MailingAPI',
          'Services/MusicAPI',
          'Services/PartyAPI'
        ]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check if service changed
      id: check_changes
      uses: dorny/paths-filter@v3
      with:
        filters: |
          service:
            - '${{ matrix.service }}/**'
            
    - name: Setup .NET
      if: steps.check_changes.outputs.service == 'true'
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.x'
        
    - name: Restore dependencies
      if: steps.check_changes.outputs.service == 'true'
      run: dotnet restore ${{ matrix.service }}
      
    - name: Build
      if: steps.check_changes.outputs.service == 'true'
      run: dotnet build ${{ matrix.service }} --no-restore --configuration Release

  validate_react:
    name: Validate PR - React
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [
          'Frontends/DJPanel',
          'Frontends/Identity',
          'Frontends/Music'
        ]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check if frontend changed
      id: check_changes
      uses: dorny/paths-filter@v3
      with:
        filters: |
          frontend:
            - '${{ matrix.service }}/**'
            
    - name: Use Node version
      if: steps.check_changes.outputs.frontend == 'true'
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        
    - name: Install dependencies
      if: steps.check_changes.outputs.frontend == 'true'
      run: npm install
      working-directory: ${{ matrix.service }}
      
    - name: Build
      if: steps.check_changes.outputs.frontend == 'true'
      run: npm run build
      working-directory: ${{ matrix.service }}