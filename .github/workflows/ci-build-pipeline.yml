name: Build Projects

on:
  schedule:
    - cron: '0 0 * * *'  # Runs at 00:00 UTC every day
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - DEV
          - PREPROD
          - PROD
        default: 'DEV'

jobs:
  validate_dotnet:
    name: Build - DotNet
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [
          'Services/CompanyAPI',
          'Services/DJHostGateway',
          'Services/DocumentsAPI',
          'Services/EquipmentAPI',
          'Services/IdentityAPI',
          'Services/MailingAPI',
          'Services/MusicAPI',
          'Services/PartyAPI'
        ]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.x'
    - name: Restore dependencies
      run: dotnet restore ${{ matrix.service }}
    - name: Build
      run: dotnet build ${{ matrix.service }} --no-restore --configuration Release
    - name: Create artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ replace(matrix.service, '/', '.') }}
        path: ${{ matrix.service }}/bin/Release/net9.0/
  validate_react:
    name: Build - React
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [
          'Frontends/DJPanel',
          'Frontends/Identity',
          'Frontends/Music'
        ]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Use Node version
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    - name: Install dependencies
      run: npm install
      working-directory: ${{ matrix.service }}
    - name: Build
      run: npm run build
      working-directory: ${{ matrix.service }}
    - name: Create artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ replace(matrix.service, '/', '.') }}
        path: ${{ matrix.service }}/build/

    


