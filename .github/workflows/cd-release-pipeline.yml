name: Release Projects

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - DEV
          - PREPROD
          - PROD
jobs:
  release_artifacts:
    name: Release Artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [
          'Services/CompanyAPI',
          'Services/DJHostGateway',
          'Services/DocumentsAPI',
          'Services/EquipmentAPI',
          'Services/IdentityAPI',
          'Services/MailingAPI',
          'Services/MusicAPI',
          'Services/PartyAPI',
          'Frontends/DJPanel',
          'Frontends/Identity',
          'Frontends/Music'
        ]
    steps:
    - name: Prepare artifact name
      id: prepare-name
      run: echo "artifact_name=$(echo ${{ matrix.service }} | tr '/' '.')" >> $GITHUB_OUTPUT
    - name: Get Latest Date Signed Artifact
      id: get-latest-artifact
      run: |
        # Assuming artifacts are stored in a predictable location (e.g., releases directory)
        latest_artifact=$(ls -1tr ${{ github.event.inputs.environment }}.${{ steps.prepare-name.outputs.artifact_name }}*.zip | tail -1)
        echo "latest_artifact=$latest_artifact" >> $GITHUB_OUTPUT
    - uses: actions/download-artifact@v3
      with:
        name: ${{ steps.get-latest-artifact.outputs.latest_artifact }}
        path: build
    - run: zip -r build.zip build/
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "build.zip"